<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hw.gs.mapper.VideosMapper">
  <resultMap id="BaseResultMap" type="hw.gs.entity.Videos">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="video_title" jdbcType="VARCHAR" property="videoTitle" />
    <result column="video_type" jdbcType="VARCHAR" property="videoType" />
    <result column="like_counts" jdbcType="INTEGER" property="likeCounts" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="created_location" jdbcType="VARCHAR" property="createdLocation" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="hw.gs.entity.Videos">
    <result column="video_description" jdbcType="LONGVARCHAR" property="videoDescription" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, video_title, video_type, like_counts, `status`, created_at, created_location
  </sql>
  <sql id="Blob_Column_List">
    video_description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="hw.gs.entity.VideosExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from videos
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="hw.gs.entity.VideosExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from videos
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from videos
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from videos
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="hw.gs.entity.VideosExample">
    delete from videos
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="hw.gs.entity.Videos">
    insert into videos (id, user_id, video_title, 
      video_type, like_counts, `status`, 
      created_at, created_location, video_description
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{videoTitle,jdbcType=VARCHAR}, 
      #{videoType,jdbcType=VARCHAR}, #{likeCounts,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{createdLocation,jdbcType=VARCHAR}, #{videoDescription,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="hw.gs.entity.Videos">
    insert into videos
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="videoTitle != null">
        video_title,
      </if>
      <if test="videoType != null">
        video_type,
      </if>
      <if test="likeCounts != null">
        like_counts,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="createdLocation != null">
        created_location,
      </if>
      <if test="videoDescription != null">
        video_description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="videoTitle != null">
        #{videoTitle,jdbcType=VARCHAR},
      </if>
      <if test="videoType != null">
        #{videoType,jdbcType=VARCHAR},
      </if>
      <if test="likeCounts != null">
        #{likeCounts,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdLocation != null">
        #{createdLocation,jdbcType=VARCHAR},
      </if>
      <if test="videoDescription != null">
        #{videoDescription,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="hw.gs.entity.VideosExample" resultType="java.lang.Long">
    select count(*) from videos
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update videos
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.userId != null">
        user_id = #{row.userId,jdbcType=BIGINT},
      </if>
      <if test="row.videoTitle != null">
        video_title = #{row.videoTitle,jdbcType=VARCHAR},
      </if>
      <if test="row.videoType != null">
        video_type = #{row.videoType,jdbcType=VARCHAR},
      </if>
      <if test="row.likeCounts != null">
        like_counts = #{row.likeCounts,jdbcType=INTEGER},
      </if>
      <if test="row.status != null">
        `status` = #{row.status,jdbcType=INTEGER},
      </if>
      <if test="row.createdAt != null">
        created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.createdLocation != null">
        created_location = #{row.createdLocation,jdbcType=VARCHAR},
      </if>
      <if test="row.videoDescription != null">
        video_description = #{row.videoDescription,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update videos
    set id = #{row.id,jdbcType=BIGINT},
      user_id = #{row.userId,jdbcType=BIGINT},
      video_title = #{row.videoTitle,jdbcType=VARCHAR},
      video_type = #{row.videoType,jdbcType=VARCHAR},
      like_counts = #{row.likeCounts,jdbcType=INTEGER},
      `status` = #{row.status,jdbcType=INTEGER},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      created_location = #{row.createdLocation,jdbcType=VARCHAR},
      video_description = #{row.videoDescription,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update videos
    set id = #{row.id,jdbcType=BIGINT},
      user_id = #{row.userId,jdbcType=BIGINT},
      video_title = #{row.videoTitle,jdbcType=VARCHAR},
      video_type = #{row.videoType,jdbcType=VARCHAR},
      like_counts = #{row.likeCounts,jdbcType=INTEGER},
      `status` = #{row.status,jdbcType=INTEGER},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      created_location = #{row.createdLocation,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="hw.gs.entity.Videos">
    update videos
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="videoTitle != null">
        video_title = #{videoTitle,jdbcType=VARCHAR},
      </if>
      <if test="videoType != null">
        video_type = #{videoType,jdbcType=VARCHAR},
      </if>
      <if test="likeCounts != null">
        like_counts = #{likeCounts,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdLocation != null">
        created_location = #{createdLocation,jdbcType=VARCHAR},
      </if>
      <if test="videoDescription != null">
        video_description = #{videoDescription,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="hw.gs.entity.Videos">
    update videos
    set user_id = #{userId,jdbcType=BIGINT},
      video_title = #{videoTitle,jdbcType=VARCHAR},
      video_type = #{videoType,jdbcType=VARCHAR},
      like_counts = #{likeCounts,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      created_location = #{createdLocation,jdbcType=VARCHAR},
      video_description = #{videoDescription,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="hw.gs.entity.Videos">
    update videos
    set user_id = #{userId,jdbcType=BIGINT},
      video_title = #{videoTitle,jdbcType=VARCHAR},
      video_type = #{videoType,jdbcType=VARCHAR},
      like_counts = #{likeCounts,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      created_location = #{createdLocation,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>